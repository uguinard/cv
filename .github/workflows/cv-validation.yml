name: CV Validation & Deployment

on:
  push:
    branches: [ main, master ]
    paths: [ 'data/cv.json', 'locales/*.json' ]
  pull_request:
    branches: [ main, master ]
    paths: [ 'data/cv.json', 'locales/*.json' ]

jobs:
  validate-cv:
    runs-on: ubuntu-latest
    name: Validate CV Data
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Validate JSON structure
      run: |
        echo "üîç Validating CV JSON structure..."
        node -e "
          const fs = require('fs');
          const data = JSON.parse(fs.readFileSync('data/cv.json', 'utf8'));
          
          const required = ['personal', 'metadata'];
          const missing = required.filter(field => !data[field]);
          
          if (missing.length > 0) {
            console.error('‚ùå Missing required fields:', missing);
            process.exit(1);
          }
          
          if (!data.personal.name) {
            console.error('‚ùå Personal name is required');
            process.exit(1);
          }
          
          if (!data.personal.email) {
            console.error('‚ùå Personal email is required');
            process.exit(1);
          }
          
          console.log('‚úÖ CV JSON structure is valid');
          console.log('üìä CV Summary:');
          console.log('  Name:', data.personal.name);
          console.log('  Experience entries:', data.experience?.length || 0);
          console.log('  Education entries:', data.education?.length || 0);
          console.log('  Languages:', data.languages?.length || 0);
        "
        
    - name: Validate translations
      run: |
        echo "üåç Validating translation files..."
        for file in locales/*.json; do
          echo "Checking $file..."
          node -e "
            const fs = require('fs');
            try {
              JSON.parse(fs.readFileSync('$file', 'utf8'));
              console.log('‚úÖ $file is valid JSON');
            } catch (e) {
              console.error('‚ùå $file has invalid JSON:', e.message);
              process.exit(1);
            }
          "
        done
        
    - name: Check for missing translations
      run: |
        echo "üîç Checking for missing translations..."
        node -e "
          const fs = require('fs');
          const path = require('path');
          
          // Get all translation files
          const translationFiles = fs.readdirSync('locales')
            .filter(f => f.endsWith('.json'))
            .map(f => f.replace('.json', ''));
          
          console.log('üìã Available languages:', translationFiles);
          
          // Check if all required keys exist in all languages
          const requiredKeys = [
            'nav_profile', 'nav_experience', 'nav_education', 
            'nav_skills', 'nav_languages', 'print_btn_text'
          ];
          
          let allValid = true;
          for (const lang of translationFiles) {
            const data = JSON.parse(fs.readFileSync(\`locales/\${lang}.json\`, 'utf8'));
            const missing = requiredKeys.filter(key => !data[key]);
            if (missing.length > 0) {
              console.error(\`‚ùå \${lang} missing keys:\`, missing);
              allValid = false;
            }
          }
          
          if (!allValid) {
            process.exit(1);
          }
          
          console.log('‚úÖ All translation files have required keys');
        "

  deploy-pages:
    needs: validate-cv
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Comment deployment URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'üöÄ CV deployed successfully! Preview: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}'
          })
